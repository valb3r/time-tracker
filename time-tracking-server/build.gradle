import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

group 'ua.timetracker.timetrackingserver'
version '0.1-SNAPSHOT'
description = 'Time log receiver'

buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}"
        classpath "io.spring.gradle:dependency-management-plugin:${versions.springDependencyManagement}"
    }
    repositories {
        mavenCentral()
    }
}

apply from: "$rootProject.projectDir/shared.gradle"

apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

repositories {
    mavenCentral()
    maven {
        url "https://repo.spring.io/libs-snapshot"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile project(":shared")

    compile "io.projectreactor:reactor-tools"
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.security:spring-security-oauth2-jose'
    compile 'org.springframework.security:spring-security-oauth2-resource-server'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile "org.neo4j.springframework.data:spring-data-neo4j-rx-spring-boot-starter:${versions.neo4jRx}"

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    compile "com.google.guava:guava:${versions.guava}"
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    compile "org.hibernate:hibernate-validator:${versions.validator}"

    compile "org.springdoc:springdoc-openapi-webflux-ui:${versions.springdoc}"

    testCompile "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

apply from: "$rootProject.projectDir/shared.gradle"
apply plugin: 'com.bmuschko.docker-remote-api'

bootJar {
    enabled = true
    mainClassName = 'ua.timetracker.timetrackingserver.TimeTrackingServer'
}

jar {
    version = project.version
    enabled = true
}

task syncJar(type: Copy) {
    dependsOn bootJar
    from "${buildDir}/${libsDirName}"
    into dockerBuildDir
}

task createDockerfile(type: Dockerfile) {
    def cmd = "/app/time-tracker-${commitSha()}.jar";
    from 'openjdk:8-jdk-alpine'
    label(['maintainer': 'Valentyn Berezin vbe@adorsys.com.ua"'])
    copyFile(jar.archiveFileName.get(), cmd)
    entryPoint('java')
    defaultCommand('-jar', cmd)
    exposePort(20081)
}


task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile, syncJar
    inputDir.set(project.file(dockerBuildDir))
    images.add("ua-timetracker/time-tracker:${commitSha()}")
}
